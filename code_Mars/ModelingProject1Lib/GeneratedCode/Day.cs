//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public abstract class Day
{
    //properties
	private string report;
    public string Report { get { return report; } set { report = value; } }

	private int number;
    public int Number { get { return number; } }


	private bool outside;
    public bool Outside { get { return outside; } set { outside = value; } }


	private List<Activity> l_activity;
    public List<Activity> L_activity { get { return l_activity; } }

    private int hq_x;
    public int Hq_x { get { return hq_x; } }

    private int hq_y;
    public int Hq_y { get { return hq_y; } }



    //constructor

    public Day(int _number, int _hq_x, int _hq_y)
    {
        number = _number;
        hq_x = _hq_x;
        hq_y = _hq_y;
        for (int i = 0; i < 147; i++) //24*6+4 -1 because no activity at 24:40
        {
            //create default activity
            l_activity[i] = new Inside(i, i+1, hq_x, _hq_y);
        }
    }

    //methodes


    //don't mind what you remove
    public void addActivity(Activity newActivity)
    {
        for (int i = newActivity.Start; i <= newActivity.End; i++)
        {
            l_activity[i] = newActivity;
        }
    }

	public void rmActivity(Activity prevActivity)
	{
        foreach (Activity act in l_activity)
        {
            if (act.Equals(prevActivity))
            {
                //replace the remove activity by the default one which is private at the hq
                Activity newActivity = new Inside(prevActivity.Start, prevActivity.End, hq);
                addActivity(newActivity);
            }
            else
            {
                //message erreur
            }
        }
	}

}

